name: Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  FLUTTER_VERSION: '3.16.0'

jobs:
  test:
    name: Unit and Widget Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'
    
    - uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
    
    - name: Install dependencies
      run: flutter pub get
    
    - name: Analyze code
      run: flutter analyze
    
    - name: Run tests with coverage
      run: flutter test --coverage
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: coverage/lcov.info
    
    - name: Archive coverage results
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: coverage/

  build-android:
    name: Build and Test Android
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'
    
    - uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
    
    - name: Install dependencies
      run: flutter pub get
    
    - name: Build APK
      run: flutter build apk --debug
    
    - name: Build App Bundle
      run: flutter build appbundle --debug
    
    - name: Upload APK
      uses: actions/upload-artifact@v3
      with:
        name: android-apk
        path: build/app/outputs/flutter-apk/app-debug.apk
    
    - name: Upload App Bundle
      uses: actions/upload-artifact@v3
      with:
        name: android-bundle
        path: build/app/outputs/bundle/debug/app-debug.aab
    
    # Integration tests on Android
    - name: Run integration tests
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 30
        arch: x86_64
        profile: Nexus 6
        script: |
          flutter test integration_test/app_launch_test.dart

  build-ios:
    name: Build and Test iOS
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
    
    - name: Install dependencies
      run: flutter pub get
    
    - name: Install pods
      run: |
        cd ios
        pod install
        cd ..
    
    - name: Build iOS (no signing)
      run: flutter build ios --no-codesign --simulator
    
    - name: List simulators
      run: xcrun simctl list
    
    - name: Start simulator
      run: |
        # Boot iPhone 14 simulator
        UDID=$(xcrun simctl list devices | grep "iPhone 14 (" | grep -E -o -i "([0-9a-f]{8}-([0-9a-f]{4}-){3}[0-9a-f]{12})" | head -n 1)
        xcrun simctl boot $UDID || true
    
    - name: Run integration tests on iOS
      run: |
        flutter test integration_test/app_launch_test.dart

  build-web:
    name: Build and Test Web
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
    
    - name: Install dependencies
      run: flutter pub get
    
    - name: Build web
      run: flutter build web --release
    
    - name: Run web tests
      run: |
        flutter test integration_test/app_launch_test.dart --platform chrome --headless
    
    - name: Upload web build
      uses: actions/upload-artifact@v3
      with:
        name: web-build
        path: build/web/
    
    - name: Deploy to GitHub Pages (on main branch)
      if: github.ref == 'refs/heads/main'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./build/web

  integration-test:
    name: Full Integration Test Suite
    needs: [test, build-android, build-ios, build-web]
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download test results
      uses: actions/download-artifact@v3
      with:
        name: coverage-report
        path: coverage/
    
    - name: Generate test report
      run: |
        echo "# Test Results Summary" > test_summary.md
        echo "" >> test_summary.md
        echo "## Build Status" >> test_summary.md
        echo "- ✅ Unit Tests: Passed" >> test_summary.md
        echo "- ✅ Android Build: Passed" >> test_summary.md
        echo "- ✅ iOS Build: Passed" >> test_summary.md
        echo "- ✅ Web Build: Passed" >> test_summary.md
        echo "" >> test_summary.md
        echo "## Coverage Report" >> test_summary.md
        echo "See coverage artifacts for detailed report" >> test_summary.md
    
    - name: Upload test summary
      uses: actions/upload-artifact@v3
      with:
        name: test-summary
        path: test_summary.md
    
    - name: Comment PR with results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const summary = fs.readFileSync('test_summary.md', 'utf8');
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: summary
          });

  performance-test:
    name: Performance Tests
    runs-on: ubuntu-latest
    needs: [build-android]
    
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'
    
    - uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
    
    - name: Install dependencies
      run: flutter pub get
    
    - name: Download Android APK
      uses: actions/download-artifact@v3
      with:
        name: android-apk
    
    - name: Run performance tests
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 30
        arch: x86_64
        profile: Nexus 6
        script: |
          # Install APK
          adb install app-debug.apk
          
          # Run performance monitoring
          adb shell dumpsys gfxinfo com.example.trader_app reset
          
          # Launch app
          adb shell am start -n com.example.trader_app/.MainActivity
          
          # Wait for app to load
          sleep 10
          
          # Capture performance metrics
          adb shell dumpsys gfxinfo com.example.trader_app > performance_report.txt
          
          # Capture memory info
          adb shell dumpsys meminfo com.example.trader_app > memory_report.txt
    
    - name: Upload performance reports
      uses: actions/upload-artifact@v3
      with:
        name: performance-reports
        path: |
          performance_report.txt
          memory_report.txt